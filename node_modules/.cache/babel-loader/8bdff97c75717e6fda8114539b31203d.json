{"remainingRequest":"/home/redfox/Documentos/chime-web/node_modules/babel-loader/lib/index.js!/home/redfox/Documentos/chime-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/redfox/Documentos/chime-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/redfox/Documentos/chime-web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/redfox/Documentos/chime-web/src/App.vue","mtime":1584932446530},{"path":"/home/redfox/Documentos/chime-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/redfox/Documentos/chime-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/redfox/Documentos/chime-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/redfox/Documentos/chime-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\" v-bind=\"projection\">\n    <b-navbar>\n      <img src=\"./imagens/redfox_logo_alta_branco.png\"  width=\"150\" />\n    </b-navbar>\n    <b-container fluid>\n      <b-row>\n        <b-col cols=\"3\" xs=\"1\" style=\"z-index:10\">\n          \n          <sidebarInput />\n        </b-col>\n\n        <b-col md=\"8\" class=\"mt-5 pt-5 ml-3\" xs=\"12\">\n          <h1>Modelo de Impacto Hospitalar COVID-19 para Epidemias</h1>\n          <p>Um modelo <b>SIR</b> é um modelo epidemiológico que calcula o número teórico de pessoas infectadas com uma doença contagiosa em uma população fechada ao longo do tempo. O nome dessa classe de modelos deriva do fato de envolverem equações acopladas que relacionam o número de pessoas suscetíveis <b><var>S<sub>(t)</sub></var></b>, número de pessoas infectadas <b><var>I<sub>(t)</sub></var></b> e número de pessoas que têm recuperado <b><var>R<sub>(t)</sub></var></b>.</p>\n          <p>Essa ferramenta foi desenvolvida pela equipe da Predictive Healthcare na Penn Medicine e a RedFox está apoiando esta causa e disponibilizando gratuitamente o acesso.</p>\n          <p><b>Mitigação:</b> Uma redução de <b>0%</b> no contato social após o início do surto reduz o tempo de duplicação para <b>6,0 dias</b>, implicando em uma <var>R<sub>t</sub></var>  do <var>2,71</var>.</p>\n          <b-button v-b-toggle.collapse-1 variant=\"outline-danger\">Mostrar mais sobre essa ferramenta</b-button>\n          <b-collapse id=\"collapse-1\" class=\"mt-2\">\n          <h4><b><a href=\"https://mathworld.wolfram.com/SIRModel.html\" target=\"_blank\">Modelagem SIR</a> de infecções / recuperação em tempo discreto</b></h4>\n          <p><i>O modelo consiste em indivíduos que são Susceptíveis (<var>S</var>),infectado(<var>I</var>) ou recuperado(<var>R</var>).</i></p>\n          <p>A epidemia prossegue através de um processo de crescimento e declínio. Este é o modelo central da disseminação de doenças infecciosas e vem sendo utilizado em epidemiologia há muitos anos.</p>\n          <p>A dinâmica é dada pelas 3 equações a seguir.</p>\n          <h5><var>S<sub>t + 1</sub> = ( - β S<sub>t</sub>I<sub>t</sub>) + S<sub>t</sub></var></h5>\n          <h5><var>I<sub>t + 1</sub> = ( β S<sub>t</sub>I<sub>t</sub> - γ I<sub>t</sub>) + I<sub>t</sub></var></h5>\n          <h5><var>R<sub>t + 1</sub> = ( γ I<sub>t</sub>) + R<sub>t</sub></var></h5>\n          <p>Para projetar o impacto esperado, estimamos os termos do modelo. Para fazer isso, usamos uma combinação de estimativas de outros locais, estimativas informadas com base em raciocínio lógico e melhores sugestões.</p>\n          <h4>Parâmetros</h4>\n          <p> Os parâmetros do modelo, β e γ, determinam a virulência da epidemia. β pode ser interpretado como a <i>taxa de contato efetiva</i>:</p>\n          <h5>β = τ × c</h5>\n          <p>que é a transmissibilidade (τ) multiplicado pelo número médio de pessoas expostas (c) A transmissibilidade é a virulência básica do patógeno. O número de pessoas expostas c é o parâmetro que pode ser alterado através do distanciamento social.</p>\n          <p>γ é o inverso do tempo médio de recuperação, em dias. Ou seja: se γ = 1 / 14, em seguida, a infecção média irá acabar em 14 dias.</p>\n          <p>Um parâmetro descritivo importante é o <i>número básico de reprodução</i> , <var>R<sub>0</sub></var> . Isso representa o número médio de pessoas que serão infectadas por qualquer pessoa infectada. Quando <var>R<sub>0</sub></var> é maior que 1, significa que uma doença crescerá. Superior <var>R<sub>0</sub></var> implica um crescimento mais rápido. É definido como</p>\n          <h5><var>R<sub>0</sub></var> = β / γ</h5>\n          <p><var>R<sub>0</sub></var> fica maior quando</p>\n          <p>\n            <ul>\n              <li>\n                existem mais contatos entre pessoas\n              </li>\n              <li>\n                quando o patógeno é mais virulento\n              </li>\n              <li>\n                quando as pessoas têm o patógeno por longos períodos de tempo\n              </li>\n            </ul>\n          </p>\n          <p>\n            Um tempo de duplicação de 6 dias e um tempo de recuperação de 14,0 dias implicam uma <var>R<sub>0</sub></var> de 2,71.\n          </p>\n          <p><b>Efeito do distanciamento social</b></p>\n          <p>Após o início do surto, ações para reduzir o contato social reduzirão o parâmetro c . Se isso acontecer no momento t , então o número de pessoas infectadas por qualquer pessoa infectada é <var>R<sub>t</sub></var>, que será menor que <var>R<sub>0</sub></var>.</p>\n          <p>Uma redução de 0% no contato social aumentaria o tempo necessário para o surto dobrar, para 6,00 dias a partir de 6,00 dias, com um <var>R<sub>t</sub></var> de 2,71.</p>\n          <p><b>Usando o modelo</b></p>\n          <p>Precisamos expressar os dois parâmetros β e γ em termos de quantidades que podemos estimar.</p>\n          <p><ul>\n            <li>γ : o CDC está recomendando 14 dias de auto-quarentena, usaremos\\ gama = 1 / 14,0γ=1 / 1 4 . 0.</li>\n            <li>Estimar β diretamente, precisaríamos saber a transmissibilidade e as taxas de contato social. como não sabemos essas coisas, podemos extraí-la dostempos de duplicaçãoconhecidos. A AHA diz esperar um tempo duplicado <var>T<sub>d</sub></var> de 7 a 10 dias. Isso significa que uma taxa de crescimento da fase inicial pode ser calculada usando a fórmula do tempo de duplicação:</li>\n          </ul></p>\n          <h5>\n            <var>\n              g = 1\n              <sup>\n                1 / T\n                <sub>d</sub>\n              </sup> - 1\n            </var>\n          </h5>\n          \n          </b-collapse>\n          <p>\n            <label for=\"range-1\" class=\"ml-2 mt-5\">Número de dias para projetar</label>\n            <b-form-input id=\"range-1\" type=\"number\" v-model=\"n_days\"></b-form-input>\n          </p>\n          <h4>Novas Admissões</h4>\n          <p>\n            Número projetado de admissões\n            <b>diárias</b> de COVID-19\n          </p>\n          <apexchart style=\"max-width:600px;margin: 0px auto;\" type=\"line\" :options=\"optionsC1\" :series=\"seriesC1\"></apexchart>\n          <h4>Pacientes Admitidos</h4>\n          <p>\n            <b>Censo</b> projetado de pacientes com COVID-19, responsável por chegadas e altas\n          </p>\n          <apexchart style=\"max-width:600px;margin: 0px auto;\" type=\"line\" :options=\"optionsC2\" :series=\"seriesC2\"></apexchart>\n          <b-button v-b-toggle.collapse-2 variant=\"outline-danger\">Mostrar projeções adicionais</b-button>\n          <b-collapse id=\"collapse-2\" class=\"mt-2\">\n            <h4>Projeções Adicionais</h4>\n            <apexchart style=\"max-width:600px;margin: 0px auto;\" type=\"line\" :options=\"optionsC3\" :series=\"seriesC3\"></apexchart>\n          </b-collapse>\n          \n          <h4>Referências e Agradecimentos</h4>\n          <ul>\n            <li>Webinar da AHA, 26 de fevereiro, James Lawler, MD, professor associado da University of Nebraska Medical Center, O que os líderes da área de saúde precisam saber: Preparação para o COVID-19</li>\n            <li>Gostaríamos de reconhecer a valiosa assistência na consulta e revisão das suposições do modelo por Michael Z. Levy, PhD, Professor Associado de Epidemiologia, Departamento de Bioestatística, Epidemiologia e Informática da Escola de Medicina Perelman</li>\n          </ul>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport SidebarInput from \"./components/SidebarInput\"\n\nexport default {\n  name: \"App\",\n  components: {\n    SidebarInput\n  },\n  data() {\n    return {\n      active: true,\n      current_hosp: 4,\n\n      doubling_time: 6,\n      relative_contact_rate: 0,\n      hosp_rate: 7,\n      icu_rate: 2,\n      vent_rate: 1,\n      hosp_los: 7,\n      icu_los: 9,\n      vent_los: 10,\n      Penn_market_share: 15,\n      S: 4119405,\n      S_default: 4119405,\n      initial_infections: 91,\n      total_infections: null,\n      detection_prob: null,\n      I: null,\n      intrinsic_growth_rate: null,\n      gamma: null,\n      beta: null,\n      r_naught: null,\n      n_days: 70,\n      beta_decay: 0.0,\n      s: [],\n      i: [],\n      r: [],\n      hosp: [],\n      icu: [],\n      vent: [],\n      days: [],\n      hosp2: [],\n      icu2: [],\n      vent2: [],\n      hosp3: [],\n      icu3: [],\n      vent3: [],\n      optionsC1: {},\n      seriesC1: [],\n      optionsC2: {},\n      seriesC2: [],\n      optionsC3: {},\n      seriesC3: [],\n      i2: [],\n      r2: []\n    };\n  },\n  methods: {\n    load_projections: function() {\n      this.zerar();\n      \n      let result = this.sim_sir(\n        this.S,\n        this.I,\n        this.R,\n        this.beta,\n        this.gamma,\n        this.n_days,\n        this.beta_decay\n      );\n\n      this.s = result[0];\n      this.i = result[1];\n      this.r = result[2];\n\n      for (let j = 0; j < this.i.length; j++) {\n        this.hosp.push(\n          this.i[j] *\n            (this.hosp_rate / 100.0) *\n            (this.Penn_market_share / 100.0)\n        );\n      }\n\n      for (let j = 0; j < this.i.length; j++) {\n        this.icu.push(\n          this.i[j] * (this.icu_rate / 100.0) * (this.Penn_market_share / 100.0)\n        );\n      }\n      for (let j = 0; j < this.i.length; j++) {\n        this.vent.push(\n          this.i[j] *\n            (this.vent_rate / 100.0) *\n            (this.Penn_market_share / 100.0)\n        );\n      }\n\n      // this.hosp2.push(Math.trunc(this.hosp[0]));\n      for (let j = 1; j < this.n_days; j += this.n_days / 10) {\n        if (this.hosp[j] - this.hosp[j - 1] > 0)\n          this.hosp2.push(Math.trunc(this.hosp[j] - this.hosp[j - 1]));\n        this.days.push(j);\n      }\n\n      // this.icu2.push(this.icu[0]);\n      for (let j = 1; j < this.n_days; j += this.n_days / 10) {\n        if (this.icu[j] - this.icu[j - 1] > 0)\n          this.icu2.push(Math.trunc(this.icu[j] - this.icu[j - 1]));\n      }\n\n      // this.vent2.push(this.vent[0]);\n      for (let j = 1; j < this.n_days; j += this.n_days / 10) {\n        if (this.vent[j] - this.vent[j - 1] > 0)\n          this.vent2.push(Math.trunc(this.vent[j] - this.vent[j - 1]));\n      }\n\n      //chart admitidos\n\n      for (let i = 1; i <= this.n_days; i += this.n_days / 10) {\n        if(this.hosp[i] - this.hosp[i - this.hosp_los] > 0){\n          if (i >= this.hosp_los) {\n            this.hosp3.push(\n              Math.ceil(this.hosp[i] - this.hosp[i - this.hosp_los])\n            );\n          } else {\n            this.hosp3.push(Math.ceil(this.hosp[i]));\n          }\n        }else{\n          this.hosp3.push(0)\n\n        }\n      }\n\n      for (let i = 1; i <= this.n_days; i += this.n_days / 10) {\n        if(this.icu[i] - this.icu[i - this.icu_los] > 0){\n          if (i >= this.icu_los) {\n            this.icu3.push(\n              Math.ceil(this.icu[i] - this.icu[i - this.icu_los])\n            );\n          } else {\n            this.icu3.push(Math.ceil(this.icu[i]));\n          }\n        }else{\n          this.icu3.push(0)\n        }\n\n      }\n\n\n      for (let i = 1; i <= this.n_days; i += this.n_days / 10) {\n        if(this.vent[i] - this.vent[i - this.vent_los] > 0){\n        if (i >= this.vent_los) {\n          this.vent3.push(\n            Math.ceil(this.vent[i] - this.vent[i - this.vent_los])\n          );\n        } else {\n          this.vent3.push(Math.ceil(this.vent[i]));\n        }\n        }else{\n          this.vent3.push(0)\n\n        }\n      }\n\n      for (let i = 1; i < this.n_days; i += this.n_days / 10) {\n        this.i2.push(Math.trunc(this.i[i]));\n      }\n\n      for (let i = 1; i < this.n_days; i += this.n_days / 10) {\n        this.r2.push(Math.trunc(this.r[i]));\n      }\n\n      this.optionsC1 = {\n        chart: {\n          id: 4\n        },\n        xaxis: {\n          categories: this.days,\n          trim: false\n        }\n      };\n\n      this.seriesC1 = [\n        {\n          name: \"Hospitalizado\",\n          data: this.hosp2\n        },\n        {\n          name: \"UTI\",\n          data: this.icu2\n        },\n        {\n          name: \"Ventilação\",\n          data: this.vent2\n        }\n      ];\n\n      this.optionsC2 = {\n        chart: {\n          id: 4\n        },\n        xaxis: {\n          categories: this.days,\n          trim: false\n        }\n      };\n\n      this.seriesC2 = [\n        {\n          name: \"Hospitalizado\",\n          data: this.hosp3\n        },\n        {\n          name: \"UTI\",\n          data: this.icu3\n        },\n        {\n          name: \"Ventilação\",\n          data: this.vent3\n        }\n      ];\n\n      this.optionsC3 = {\n        chart: {\n          id: 4\n        },\n        xaxis: {\n          categories: this.days,\n          trim: false\n        }\n      };\n\n      this.seriesC3 = [\n        {\n          name: \"Infectado\",\n          data: this.i2\n        },\n        {\n          name: \"Recuperado\",\n          data: this.r2\n        }\n      ];\n    },\n    zerar: function() {\n      this.s.length = 0\n      this.i.length = 0\n      this.r.length = 0\n      this.hosp.length = 0\n      this.icu.length = 0\n      this.vent.length = 0\n      this.hosp2.length = 0\n      this.icu2.length = 0\n      this.vent2.length = 0\n      this.hosp3.length = 0\n      this.icu3.length = 0\n      this.vent3.length = 0\n      this.days.length = 0\n      this.S = this.S_default;\n      this.i2.length = 0\n      this.r2.length = 0\n      this.total_infections =\n        this.current_hosp /\n        (this.Penn_market_share / 100.0) /\n        (this.hosp_rate / 100.0);\n      this.detection_prob = this.initial_infections / this.total_infections;\n      this.I = this.initial_infections / this.detection_prob;\n\n      this.R = 0;\n      this.intrinsic_growth_rate = 2 ** (1 / this.doubling_time) - 1;\n      this.recovery_days = 14.0;\n      this.gamma = 1 / this.recovery_days;\n      this.beta =\n        ((this.intrinsic_growth_rate + this.gamma) / this.S) *\n        (1 - this.relative_contact_rate / 100.0);\n      this.r_t = (this.beta / this.gamma) * this.S;\n      this.r_naught = this.r_t / (1 - this.relative_contact_rate / 100.0);\n      this.doubling_time_t = 1 / Math.log2(this.beta * this.S - this.gamma + 1);\n    },\n    sir: function(y, beta, gamma, N) {\n      this.S = y[0];\n      this.I = y[1];\n      this.R = y[2];\n\n      let Sn = -beta * this.S * this.I + this.S;\n      let In = beta * this.S * this.I - gamma * this.I + this.I;\n\n      let Rn = gamma * this.I + this.R;\n      if (Sn < 0) Sn = 0;\n      if (In < 0) In = 0;\n      if (Rn < 0) Rn = 0;\n\n      let scale = N / (Sn + In + Rn);\n\n      return [Sn * scale, In * scale, Rn * scale];\n    },\n    sim_sir: function(S, I, R, beta, gamma, n_days, beta_decay = null) {\n      let N = S + I + R;\n\n      this.s.push(S);\n      this.i.push(I);\n      this.r.push(R);\n      for (let day in Array.from(Array(200).keys())) {\n        console.log(day)\n        let y = [this.S, this.I, this.R];\n        let result = this.sir(y, beta, gamma, N);\n\n        this.S = result[0];\n        this.I = result[1];\n        this.R = result[2];\n        if (beta_decay) {\n          beta = beta * (1 - beta_decay);\n        }\n        this.s.push(this.S);\n        this.i.push(this.I);\n        this.r.push(this.R);\n      }\n\n      return [this.s, this.i, this.r];\n    }\n  },\n  computed: {\n    projection: function() {\n      return this.load_projections();\n    }\n  },\n  watch:{\n    n_days:function(){\n      \n    }\n  },\n  mounted() {\n    this.load_projections();\n  }\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Montserrat&display=swap\");\n\n#parentx {\n  overflow: hidden;\n  height: 90vh;\n  position: fixed;\n  margin-top: 80px;\n}\n.vs-sidebar--items {\n  width: 280px !important;\n  box-shadow:1px -1px 20px #9a9595\n}\n\n.vs-sidebar--background {\n  background: #ffffff10 !important;\n  width: auto!important;\n}\n\n#parentx button {\n  border: 1px solid #1c2871 !important;\n  background: #ffffff !important;\n  color: #1c2871 !important;\n  margin-left: 0px;\n}\n\n#parentx img {\n  float: left;\n  margin: 50px 0px 0px 20px;\n}\ninput {\n  width: 190px !important;\n  float: right;\n  margin-bottom: 30px !important;\n}\nlabel {\n  font-family: Montserrat;\n  font-size: 14px !important;\n  margin-left: -50px;\n}\n.vs-con-input-label {\n  text-align: initial !important;\n  margin-left: 60px;\n}\n#app {\n  font-family: Montserrat, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: #ffffff;\n  text-align: left;\n  color: #2c3e50;\n}\n#app h1 {\n  font-weight: bold;\n  font-size: 35px;\n  margin: 20px 0px;\n}\n#app h4 {\n  font-weight: bold;\n  margin: 20px 0px;\n}\n#app h5 {\n  text-align: center;\n  line-height: 35px;\n}\nnav {\n  background: #1c2871;\n  padding: 20px !important;\n  position: fixed !important;\n  z-index: 9999;\n  width: 100%;\n  margin-bottom: 50px !important;\n  overflow: hidden;\n}\ninput {\n  width: 100% !important;\n}\n.apexcharts-canvas {\n  text-align: center;\n}\n</style>\n"],"sourceRoot":"src"}]}